import express from "express";
import cors from "cors";
import dotenv from "dotenv";
import { initMongoDB } from "./db/initMongoDB.js";
import autoFlowRouter from "./routes/users.js";
import supportRouter from "./routes/support.js";
import { sendMessageToAI  } from "./controllers/auth.js"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è AI

dotenv.config();

const app = express();
const port = process.env.PORT || 5000;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
const corsOptions = {
  origin: "http://localhost:5173", // –í–∞—à —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ–º–µ–Ω
  credentials: true, // –†–∞–∑—Ä–µ—à–∏—Ç—å –ø–µ—Ä–µ–¥–∞—á—É –∫—É–∫–∏ –∏ –¥—Ä—É–≥–∏—Ö —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
};

app.use(cors(corsOptions));

app.use(express.json());
app.use("/api/autoflow", autoFlowRouter);

// –ù–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ AI
app.post("/api/sendMessage", sendMessageToAI);

app.use("/api/support", supportRouter);


initMongoDB()
  .then((connections) => {
    // –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –≤ –º–∞—Ä—à—Ä—É—Ç—ã —á–µ—Ä–µ–∑ middleware
    app.use((req, res, next) => {
      req.db = {
        support: connections.supportConnection,
        user: mongoose.connection, // –û—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      };
      next();
    });

    // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
    app.listen(port, () => {
      console.log(`Server started on port ${port}`);
      console.log("üîç HUGGING_FACE_API_KEY:", process.env.HUGGING_FACE_API_KEY); // –õ–æ–≥ API-–∫–ª—é—á–∞
    });
  })
  .catch((error) => {
    console.error(
      "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö:",
      error
    );
  });
