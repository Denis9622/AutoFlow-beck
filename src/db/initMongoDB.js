import mongoose from "mongoose";
import supportMessageSchema from "../models/supportMessage.js";


export const initMongoDB = async () => {
  try {
    const user = process.env.MONGODB_USER;
    const pwd = process.env.MONGODB_PASSWORD;
    const url = process.env.MONGODB_URL;
    const userDb = process.env.MONGODB_USER_DB;
    const supportDb = process.env.MONGODB_SUPPORT_DB;

    console.log(`üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB...`);
    console.log(`üîó User DB: ${userDb}`);
    console.log(`üîó Support DB: ${supportDb}`);

    await mongoose.connect(
      `mongodb+srv://${user}:${pwd}@${url}/${userDb}?retryWrites=true&w=majority`
    );
    console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ user DB!");

    const supportConnection = mongoose.createConnection(
      `mongodb+srv://${user}:${pwd}@${url}/${supportDb}?retryWrites=true&w=majority`
    );

    console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ support DB!");

    const SupportMessage = supportConnection.model(
      "SupportMessage",
      supportMessageSchema
    );
    console.log("‚úÖ SupportMessage –º–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞!");

    return { supportConnection, SupportMessage }; // ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º SupportMessage
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:", error.message);
    throw error;
  }
};
