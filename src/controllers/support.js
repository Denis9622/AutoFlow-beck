// import SupportMessage from "../models/supportMessage.js";

export const createSupportMessage = async (req, res, next) => {
  try {
    const { SupportMessage } = req.db; // ‚úÖ –ë–µ—Ä—ë–º –º–æ–¥–µ–ª—å –∏–∑ `req.db`
    const { message } = req.body;

    if (!message) {
      return res.status(400).json({ error: "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º" });
    }

    const newMessage = await SupportMessage.create({ text: message });

    console.log("üìù –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –±–∞–∑—É support:", newMessage);

    // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    const reply = "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.";

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∏–º–∏—Ç–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ñ—Ä–æ–Ω—Ç
    res.status(201).json({ newMessage, reply });
  } catch (error) {
    next(error);
  }
};

export const getSupportTickets = async (req, res) => {
  try {
    const { SupportMessage } = req.db;
    const tickets = await SupportMessage.find();
    res.json(tickets);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫:", error);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};
